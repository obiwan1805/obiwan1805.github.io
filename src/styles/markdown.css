@tailwind base;
@tailwind components;
@tailwind utilities;

/* If you use nesting, make sure PostCSS nesting is enabled (see notes below) */
.custom-md {
  h1 { @apply text-3xl; }

  h1, h2, h3, h4, h5, h6 {
    .anchor {
      @apply transition -m-0.5 ml-[0.2ch] p-0.5 select-none opacity-0 no-underline;
      /* was: !important; avoid !important inside @apply */
    }
    .anchor .anchor-icon { @apply mx-[0.45ch]; }

    &:hover .anchor { @apply opacity-100; }
  }

  a:not(.no-styling) {
    /* REPLACED `@apply link ...` with explicit utilities */
    @apply relative bg-transparent font-medium
      underline decoration-1 decoration-dashed underline-offset-4;
    @apply text-[var(--primary)] decoration-[var(--link-underline)];
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    display: inline-block;

    &:hover, &:active {
      /* keep normal CSS for non-Tailwind props */
      background: var(--btn-plain-bg-hover);
      border-bottom: 1px dashed var(--link-hover);
      text-decoration: none;
      @apply decoration-transparent;
    }
  }

  code {
    @apply bg-[var(--inline-code-bg)] text-[var(--inline-code-color)] px-1 py-0.5 rounded-md overflow-hidden;
    font-family: 'JetBrains Mono Variable', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;

    &:before { content: none; }
    &:after  { content: none; }

    counter-reset: line;

    span.line {
      &:before {
        /* use normal CSS for content to avoid @apply content-* */
        content: counter(line);
        @apply text-white/25 mr-4 w-4 inline-block;
        counter-increment: line;
        direction: rtl;
      }
      &:last-child:empty,
      &:last-child:has(> span:empty:only-child) { display: none; }
    }
  }

  .copy-btn {
    all: initial;
    /* REPLACED `btn-regular-dark` with explicit utilities */
    @apply opacity-0 shadow-lg shadow-black/50 absolute active:scale-90
      h-8 w-8 top-3 right-3 text-sm rounded-lg transition-all ease-in-out z-20 cursor-pointer
      bg-[var(--btn-regular-bg)] text-[var(--btn-regular-fg)];
  }
  .frame:hover .copy-btn { opacity: 1; }

  .copy-btn-icon {
    @apply absolute top-1/2 left-1/2 transition -translate-x-1/2 -translate-y-1/2 w-4 h-4 fill-white pointer-events-none;
  }
  .copy-btn .copy-icon { @apply opacity-100 fill-white dark:fill-white/75; }
  .copy-btn.success .copy-icon { @apply opacity-0 fill-[var(--deep-text)]; }
  .copy-btn .success-icon { @apply opacity-0 fill-white; }
  .copy-btn.success .success-icon { @apply opacity-100; }

  .expressive-code {
    @apply my-4;
    ::selection { @apply bg-[var(--codeblock-selection)]; }
  }

  ul, ol { li::marker { @apply text-[var(--primary)]; } }

  blockquote {
    @apply not-italic border-transparent relative;
    font-weight: inherit;

    &:before {
      /* prefer plain CSS for content */
      content: '';
      @apply absolute -left-1 block transition bg-[var(--btn-regular-bg)] h-full w-1 rounded-full;
    }

    /* Remove the double quotes from default styles */
    p:before, p:after { content: none; }
  }

  .katex-display-container {
    max-width: 100%;
    overflow-x: auto;
    margin: 1em 0;
  }
}
